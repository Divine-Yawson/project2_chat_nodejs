---
- name: Setup Node.js Chat App with Nginx Reverse Proxy
  hosts: chat_server
  become: true

  vars:
    app_dir: /home/ec2-user/chat-app

  tasks:
    - name: Install Node.js 18 and Git
      amazon.aws.amazon_linux_extras:
        name: "nodejs18"
        state: enabled

    - name: Install required packages
      yum:
        name:
          - nodejs
          - git
          - nginx
        state: present

    - name: Clone chat app repo (if you put it on GitHub) or use local copy
      copy:
        src: ./chat-app/
        dest: "{{ app_dir }}"
        owner: ec2-user
        group: ec2-user
        mode: 0755

    - name: Install npm dependencies
      command: npm install
      args:
        chdir: "{{ app_dir }}"

    - name: Create systemd service for chat app
      copy:
        dest: /etc/systemd/system/chatapp.service
        content: |
          [Unit]
          Description=Node.js Chat App
          After=network.target

          [Service]
          ExecStart=/usr/bin/node {{ app_dir }}/app.js
          Restart=always
          User=ec2-user
          Environment=PORT=3000
          WorkingDirectory={{ app_dir }}

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start chat app service
      systemd:
        name: chatapp
        enabled: true
        state: started

    - name: Configure Nginx as reverse proxy
      copy:
        dest: /etc/nginx/conf.d/chatapp.conf
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }

    - name: Remove default nginx config if present
      file:
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: true
